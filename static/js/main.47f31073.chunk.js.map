{"version":3,"sources":["components/Navigation.js","components/Login.js","components/Accounts/Account.js","components/Accounts/AcctTable.js","components/Accounts/AccountList.js","components/Transactions/Transaction.js","components/Transactions/UserTransaction.js","components/Transactions/Withdraw.js","components/Transactions/Deposit.js","components/Transactions/Transfer.js","components/Client/Expenses.js","components/Client/ExpensesTable.js","components/Client/Dashboard.js","App.js","index.js"],"names":["withRouter","props","LOCAL_STORAGE_KEY_1","LOCAL_STORAGE_KEY_2","location","useLocation","pathname","match","className","Dropdown","Toggle","id","Menu","Item","to","state","Login","charIndex","useState","accts","setAccts","loginState","setLoginState","userType","setUserType","usernameRef","useRef","passwordRef","useEffect","storedAccts","JSON","parse","localStorage","getItem","loadingTextId","document","querySelector","type","length","console","log","textContent","charAt","setTimeout","handleLoginKeypress","e","code","find","acct","current","value","style","borderColor","email","xmlns","viewBox","d","transform","Form","Group","controlId","Label","Control","placeholder","ref","onKeyPress","Text","onClick","userSwitch","loginParent","adminLogo","adminForm","adminPlaceholder","querySelectorAll","checked","classList","add","forEach","form","remove","Account","emailDisplay","toggleCheck","acctBal","Dinero","amount","parseInt","currency","toFormat","defaultChecked","ticked","onChange","AcctTable","Table","responsive","map","AccountList","nameChecker","emailChecker","passwordChecker","show","setShow","validated","setValidated","acctNum","setAcctNum","bal","setBal","acctName","setAcctName","acctEmail","setAcctEmail","pword","setPword","adminLocation","setAdminLocation","fullNameErrorMessage","setFullNameErrorMessage","emailErrorMessage","setEmailErrorMessage","passwordErrorMessage","setPasswordErrorMessage","acctNameRef","acctEmailRef","insecurePwordRef","initBalRef","setItem","stringify","handleClose","generateAcctNum","generatedAcctNum","Date","now","toString","substr","generateLocation","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","input","addEventListener","event","this","blur","Button","variant","updatedUserList","filter","newAccts","Modal","onHide","Header","Title","Body","noValidate","onSubmit","inputEmail","isNaN","substring","focus","test","handleErrors","preventDefault","stopPropagation","newAcct","expenses","prevAccts","required","target","min","onInput","validate","User","transaction","formattedAmt","transactionAmt","transactionDate","transactionType","transactionFromAcctNum","transactionToAcctNum","UserTransaction","transactionHistory","setTransactionHistory","storedTransactions","Transaction","transactionId","Withdraw","generateDate","TransactionClass","acctList","setAcctList","fromAcctNum","setFromAcctNum","withdrawAmt","setWithdrawAmt","withdrawMessage","setWithdrawMessage","withdrawAmtRef","fromAcct","newBal","date","newTransaction","uuidv4","prevTransactions","includes","Deposit","depositAmt","setDepositAmt","depositMessage","setDepositMessage","depositAmtRef","Transfer","toAcctNum","setToAcctNum","transferAmt","setTransferAmt","transferMessage","setTransferMessage","transferAmtRef","toAcct","newBalFromAcct","newBalToAcct","Expenses","expense","expenseCost","expenseName","ExpensesTable","Dashboard","clientDetails","setClientDetails","setExpenseName","setExpenseCost","findIndex","indexClient","color","setColor","expenseNameRef","expenseCostRef","toAcctRef","colorPickerRef","backgroundColor","size","Card","newExpense","copyClientDetails","push","newAcctList","defaultValue","title","App","partOfDay","currentDate","year","getFullYear","day","getDate","month","getMonth","currentTime","h","getHours","m","getMinutes","indexOf","path","exact","component","isAuthed","render","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.47f31073.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link, withRouter, useLocation } from \"react-router-dom\";\nimport '../css/NavBar.css'\nimport Dropdown from 'react-bootstrap/Dropdown';\n\n\nfunction Navigation(props) {\n    const LOCAL_STORAGE_KEY_1 = props.LOCAL_STORAGE_KEY_1;\n    const LOCAL_STORAGE_KEY_2 = props.LOCAL_STORAGE_KEY_2;\n    const location = useLocation();\n\n    if (location.pathname.match('/login') || (location.pathname.match('/dashboard'))){\n        return null;\n    }\n\n    return (\n        <div className=\"navigation\">\n            <Dropdown className=\"d-inline-block\">\n                    <Dropdown.Toggle id=\"nav-logo\"></Dropdown.Toggle>\n                <Dropdown.Menu>\n                <Dropdown.Item>\n                    <Link className=\"nav-link\" to=\"/accounts\">\n                    Accounts\n                    </Link>\n                </Dropdown.Item>\n                <span>Transactions</span>\n\n                <Dropdown.Item>\n                    <Link className=\"nav-link\" to={{\n                        pathname: \"/withdraw\", \n                    state: {\n                        LOCAL_STORAGE_KEY_1, \n                        LOCAL_STORAGE_KEY_2}}}>\n                    Withdraw\n                    </Link>\n                </Dropdown.Item>\n                        \n                <Dropdown.Item>\n                    <Link className=\"nav-link\" to={{\n                        pathname: \"/deposit\", \n                    state: {\n                        LOCAL_STORAGE_KEY_1, \n                        LOCAL_STORAGE_KEY_2}}}>\n                    Deposit\n                    </Link>\n                </Dropdown.Item>\n\n                <Dropdown.Item>\n                    <Link className=\"nav-link\" to={{\n                        pathname: \"/transfer\", \n                    state: {\n                        LOCAL_STORAGE_KEY_1, \n                        LOCAL_STORAGE_KEY_2}}}>\n                    Transfer\n                    </Link>\n                </Dropdown.Item>\n\n                <Dropdown.Item>\n                    <Link className=\"nav-link\" to={{\n                        pathname: \"/transactions\", \n                    /*state: {transactionHistoryProp}*/}}>\n                    Transaction History\n                    </Link>\n                </Dropdown.Item>\n\n                <Dropdown.Item>\n                    <Link className=\"nav-link\" to={{\n                        pathname: \"/login\", \n                    /*state: {transactionHistoryProp}*/}}>\n                    Logout\n                    </Link>\n                </Dropdown.Item>\n            \n                </Dropdown.Menu>\n\n            </Dropdown>\n        </div>\n    );\n}\n\nexport default withRouter(Navigation);\n","import React, {useState, useRef, useEffect} from 'react'\nimport { Form, Button} from 'react-bootstrap';\nimport { Redirect } from \"react-router-dom\";\nimport '../css/Login.css'\n\nconst LOCAL_STORAGE_KEY_1 = 'userList';\n\nconst Login = () => {\n    const [accts, setAccts] = useState([]);\n    const [loginState, setLoginState] = useState(false);\n    const [userType, setUserType] = useState('client');\n\n    const usernameRef = useRef();\n    const passwordRef = useRef();\n\n    const loadingText = `Loading`;\n    const loadingEllipis = `...`;\n    const typingDelay = 500;\n    var charIndex;\n\n    useEffect(() => {\n        const storedAccts = JSON.parse(localStorage.getItem('userList'));\n        if (storedAccts) setAccts(storedAccts);\n    }, [])\n\n\n    const loadingTextId = document.querySelector('#loadingTextId');\n\n    // function for Type Effect\n    function type() {\n        if(charIndex < loadingEllipis.length) {\n            console.log(charIndex)\n            loadingTextId.textContent += loadingEllipis.charAt(charIndex); // Add 1 dot\n            charIndex++;\n            setTimeout(type, typingDelay); // callback type function every 500ms\n        }\n    }\n\n    const handleLoginKeypress = (e) => {\n        //it triggers by pressing the enter key\n        if (e.code === 'Enter') {\n            if(loadingTextId) {\n                loadingTextId.textContent = loadingText\n                charIndex = 0;\n                type();\n            }\n\n            setTimeout(() => {\n                if(userType === 'client') {\n                    let clientLogin = accts.find(acct => acct['Email'] === usernameRef.current.value && acct['Password'] === passwordRef.current.value)\n                    if (clientLogin) {\n                        usernameRef.current.style.borderColor = 'green'\n                        passwordRef.current.style.borderColor = 'green'\n                        setLoginState(true)\n                    }\n                    else {\n                        loadingTextId.textContent = 'Wrong credentials'\n                        usernameRef.current.style.borderColor = 'red'\n                        passwordRef.current.style.borderColor = 'red'\n                    }\n                }\n                else if ((usernameRef.current.value === 'jet' && passwordRef.current.value === 'P@ssw0rd') || (usernameRef.current.value === 'arwie' && passwordRef.current.value === 'p4ssw0rd')){\n                        setLoginState(true);\n                }\n                else {\n                    loadingTextId.textContent = 'Wrong credentials'\n                    usernameRef.current.style.borderColor = 'red'\n                    passwordRef.current.style.borderColor = 'red'\n                }\n            }, 2000)\n\n        }\n        else {\n            loadingTextId.textContent = ''\n            usernameRef.current.style.borderColor = 'lightgray'\n            passwordRef.current.style.borderColor = 'lightgray'\n        }\n    };\n    \n    const changeUser = () => {\n            \n        let userSwitch;\n        let loginParent;\n        let adminLogo;\n        let adminForm;\n        let adminPlaceholder\n        userSwitch = document.querySelector('#userSwitch')\n        loginParent = document.querySelector('.login-parent')\n        adminLogo = document.querySelector('svg')\n        adminForm = document.querySelectorAll('.login-label')\n        adminPlaceholder = document.querySelectorAll('.form-control')\n        if (userSwitch.checked){\n            setUserType('admin')\n            loginParent.classList.add('adminlogin-parent')\n            adminLogo.classList.add('admin-svg')\n            adminForm.forEach(form => {\n                form.classList.add('adminmb3')    \n            })\n            adminPlaceholder.forEach(form => {\n                form.classList.add('form-placeholder')    \n            })\n        }else {\n            setUserType('client')\n            loginParent.classList.remove('adminlogin-parent')\n            adminLogo.classList.remove('admin-svg')\n            adminForm.forEach(form => {\n                form.classList.remove('adminmb3')       \n            })\n            adminPlaceholder.forEach(form => {\n                form.classList.remove('form-placeholder')    \n            })\n        }\n    }\n    if (loginState && userType === 'admin') {\n        return (\n            <Redirect to=\"/accounts\"/>\n        )\n    }\n    else if (loginState && userType === 'client') {\n        return (\n            <Redirect \n                to={{\n                    pathname: '/client/dashboard',\n                    state: { \n                        email: usernameRef.current.value,\n                        accts\n                    }\n                }}\n            />\n        )\n    }\n    else {\n        return (\n            <div className=\"login-parent\">\n                <div className=\"svg-parent\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 524.8 581.61\"><title>Asset 1</title><g id=\"Layer_2\" data-name=\"Layer 2\"><g id=\"Layer_1-2\" data-name=\"Layer 1\"><path d=\"M451.86,524.75c-1.39-1.54-.94-2.94-1.14-4.21-.77-5-8.71-8.47-12.8-5.62-1.08.76-.8,2-1,3.1-1,4.79,2.86,10.55-3.91,14.41-1.68,1-.61,6.75-.83,10.93-3.3-1.64-6.59-2.3-8.52-5.33-2.42.69-.62,3.2-2.59,4.7-.65-8.66-.85-17-3.63-26.41a169.37,169.37,0,0,0-4.24,25.47c0-8.78-.23-17.57.09-26.34.18-4.89-1.21-6.56-6.35-6.41-9.86.29-12.6,2.62-12.27,12.7.11,3.22.33,5.94-3.48,7.33-2.73,1-4.41,1.17-4.41-2.39a20.83,20.83,0,0,0-.06-2.85c-.42-2.82,1.86-9-5-4.07a3.58,3.58,0,0,1-3.32,0c-4.13-3-8.36,1.39-12.53-.37-1.42-.6-2,1.33-1.66,2.23,2.09,6.08-3.67,9.53-5.13,14.41-.71,2.37-.79,5.61-2.83,8.53-2.22-5.05.56-10.42-2.78-14.8-4.22,2.88-1.82,7.81-4.36,11.24q0-12.71,0-25.42c0-2.46.53-5.48-3.39-4.95-3,.42-7.3-2.55-8.67,3.32a40.7,40.7,0,0,0-1.25,9.48c0,1.4-.23,2.73-2.1,2.71s-1.95-1.43-2-2.79a49.47,49.47,0,0,1-.17-5.7c.29-3.94.21-6.73-5.33-6.72-3.81,0-2.19-4.25-2-6.4.47-5.2-2.79-7.46-6.18-5.41-4.12,2.5-7.09,6.73-12.43,7.74-.62.12-.65,5-.42,7.61.66,7.41-.43,14.7-1.73,22q0-23.68,0-47.38c0-6.09,1-12.35-.18-18.21-1.91-9.81,0-20.88-8.34-28.86-1.69-1.61-1.54-3.78-1.53-5.88,0-3,.05-6.09,0-9.13,0-2-1.25-3.28-3.21-3.13a2.89,2.89,0,0,0-2.78,3.07c0,2.09-.14,4.19,0,6.27.37,4.69-.42,8.75-4.15,12.21-2.79,2.59-3.51,6.38-3.81,10.19-1.7,22-.81,44-.88,66a29,29,0,0,1-2.73,11.86c-1.91-3.88-1-7.09-1.1-10.06-.15-7-.12-14.07.18-21.1.16-4-1.69-4.69-5.15-4.69s-5.08.78-4.95,4.78c.3,8.93.08,17.87,0,26.81,0,1.8-.18,3.61-.29,5.73-3.61-1.37-4.62-3.62-4.58-6.79.1-7.61-.07-15.21,0-22.82.06-4.81-2.5-7.3-6.92-7.46-3.51-.13-4.09-1.76-4-4.65s-.07-6.08,0-9.12c.07-2.39-.34-4-3.32-4.06-3.14-.06-3.3,1.92-3.31,4.09q0,13.69,0,27.37c0,2.67.54,5.64-3.71,5.38s-2.6-3.49-2.66-5.58c-.2-6.84-.21-13.69-.14-20.53,0-3-.29-5-4.23-5-3.74.07-3.75,2.12-3.74,4.8,0,13.86,0,27.72,0,42.34-3.32-1.76-4.35-4.41-6.13-6.4-6.28-7-3.45-14.89-3.89-22.4-.25-4.12-2.88-3.46-5.12-3.27s-6.24-1.71-6.19,3.32a87.14,87.14,0,0,1-.86,15.34c-2.41-4.19-1.72-8.85-1.49-13.2.26-4.91-1.77-5.65-5.94-5.57-3.34.06-4.51,1.26-4.14,4.35.85,7.11-1.51,13.25-5.38,19.07-1.82,2.73-1.93,6-1.89,9.28,0,2.35.75,4.86-1.57,8.36-2-14.9.86-28.83-1.8-42.41s-5.43-27-8.75-40.53c-8.87,26-12,52.66-10.24,80.74-3.92-2.07-3.75-4.55-3.76-7,0-5.13-.24-10.27-.1-15.4.08-2.92-.84-3.84-3.86-4-16.22-.76-16.22-.86-16.53,15.39-.05,2.66-.06,5.32,0,8,.09,3.4.52,6.91-4.32,8.07v-8.47c0-1.69-.4-3-2.49-3s-3.1,1-3.09,3.11c0,3.24,0,6.47,0,9.7,0,1.14-.1,2.54-1.63,2.47s-1.47-1.48-1.46-2.61c0-3,.12-6.08.14-9.12,0-7.28,0-7.28-7.45-7.28a12.22,12.22,0,0,1-1.71,0c-3.17-.39-4.46,1-4.39,4.17.12,5.89.08,11.79,0,17.68,0,1.52.86,4-1.66,4.12-2.75.17-1.72-2.35-1.9-3.85a15.17,15.17,0,0,1-.07-4c.6-4.2-1-6.12-5.3-5.4-5.51.91-7-1.35-6.9-6.89.5-20.49-1-41,2.06-61.46a29.62,29.62,0,0,1,3-9.07c10.9-21.67,29.12-36.11,48.36-49.6a29.09,29.09,0,0,1,7.27-3.21q21.72-7.75,43.46-15.46c7.22-2.55,11.19-9.4,9.77-17.16a22.47,22.47,0,0,0-1.24-5c-5.47-12.59-3.28-25.33-.53-38,1.42-6.51,6.93-10.75,10.51-16.06,8.3-12.31,14.93-25.59,22.52-38.3,1.16-1.94.79-4.06.22-6.1-6.25-22-7.8-44.58-6.09-67.19,1.23-16.24,5.43-32.25,6.82-48.49,1.17-13.55,9.16-23.29,15.15-34.37,7-13,16.49-22.85,29.81-29.25a63.11,63.11,0,0,0,13.49-8.49c13.06-11.1,28.77-13.67,45-16.8,19.86-3.82,38.06,2,56.7,5.53,20.82,4,38.43,14.38,53.05,29.8,23,24.24,22.93,24.23,28.6,58.77,1.23,7.52,0,14.81-1.23,22-2.75,15.57-1.86,31.11.49,46.48,3.4,22.24-2.51,42.86-9.27,63.45-.8,2.46-1.46,4.51-.11,7,4.7,8.65,6.72,18.11,7.95,27.76a13,13,0,0,0,6.75,10.39c9.41,5.5,17.87,12.06,22.5,22.54,1.31,3,3.08,5.67,3.16,9,.27,10.34,5.14,19.88,5.24,30.25,0,2.76,2.28,3.18,4.16,4,9.6,4.14,19,8.78,28.83,12.28,19.42,6.92,33.54,21.44,48.73,34.11,6.51,5.43,9.28,15,12.08,23.54,9.83,29.91,7.37,60.77,7.32,92.27-7-5.76-8.78-14.39-14.11-20.72,3.29-2,4.73-5.49,3.33-10-.85-2.78.74-4.7,2.51-6.53,2.11-2.2.79-4.88-1.13-4.58-2.95.46-3.21-1.52-4.73-2.59-3.34-2.37-5.56-4.35-3.17-8.89,1-1.79-.87-3.84-3.3-3-4.24,1.5-4.37-1.07-4.38-4,0-2.56-.8-5,0-7.76.52-1.84.88-4.91-1.7-6.82a7.63,7.63,0,0,0-1.69,8.37c1.65,3.66,1.11,6.93.46,10.49-1.51,8.28,1.14,16.37,1.37,24.58.23,7.74,2.13,15.7-3.52,22.5a1.49,1.49,0,0,0-.29.46c-.58,1.63,3,3.91,0,4.66-2,.51-2-3.08-3.43-4.53-5.09-5.23-10.85-9.72-17.92-11.47-6-1.49-8.21-5.44-8.58-10.57a184.12,184.12,0,0,1-.17-21.66c.25-5.43-3.34-4.28-6.38-4.6-3.57-.38-4.57,1.19-4.51,4.63.12,7.21-.11,14.43-.36,21.64-.06,1.69.73,4.65-1.85,4.62s-1.64-3-1.65-4.61c-.06-24,0-47.9,0-71.85,0-2.32,1.3-5.56-1.48-6.71a16.75,16.75,0,0,0-10.66-.27c-2.24.62-1.28,3.29-1.28,5.07,0,18.44.11,36.89,0,55.33,0,2.42,1.83,6.8-2.34,6.82-2.38,0-1.2-4.12-1.22-6.38-.09-16.35-.06-32.7-.07-49.05,0-3.92-5.49-12.18-9-13.52a3.18,3.18,0,0,0-1.61-.2c-3.91.69-11.08,9.52-11.07,13.66q0,20.25.15,40.49c0,1.33-.06,2.66,0,4,0,1.94-.46,3.43-2.73,3.51-2.85.11-2.19-2.1-2.2-3.64q-.12-18.53-.09-37.07c0-12.54,0-25.09.26-37.63.1-4.09-.94-6.24-5.59-5.6,1-2.37,3.78-.38,4.68-3-8.34-.73-6.35-7.08-6.61-12.33a40.79,40.79,0,0,0-1.29-9.56c0,5.69,0,11.38,0,17.07,0,1.78,0,3.44-2.45,3.67-1.51.14-4.26-.8-4.09,1.6s3.34.5,5.29,2.15c-6.18-.94-6.65,2.29-6.61,7,.21,22.43.09,44.87,0,67.3,0,2.35.47,4-3.32,5.39-5.65,2-4.74,9-5.25,13.88s-.86,9.72-1.7,14.54c-.19,1.05.22,2.52-1.39,2.63-2,.14-1.86-1.53-1.87-2.79-.08-8.75-.1-17.49-.15-26.24,0-5.08-4.66-9-3.49-14.55.26-1.23-2.06-1.17-3.37-1.14-2.11,0-2.28,1.5-2.36,3.14-.22,4.16-.7,8.31-.71,12.47,0,3-.65,4.74-4.09,4.41A10.78,10.78,0,0,0,451.86,524.75Zm6.53-364.35c-1.3-3.93-2-7.78-3.78-11.06-3.91-7.3-6.91-15.66-13.76-20.58a223,223,0,0,0-50.45-27.29c-9.54-3.66-19.22-3.93-29-3.79-12.9.19-25,4.55-37.14,8.15-3.26,1-6.69,1.48-9.62,3.4-11.3,7.38-22.08,15.06-30,26.58-4.55,6.65-7.65,13.25-8.88,21.08-.4,2.57.12,3.57,2.28,4.79,5.08,2.88,7.18,7.45,8.59,13.24,2.78,11.4.19,19.62-10.76,24.67-3,1.36-3.4,3.59-2.22,6.59,2.34,6,2.15,12.18,1.6,18.49-1,11.92-1.67,23.88-2.61,35.81a14.31,14.31,0,0,0,1.9,8.7c7.73,13.36,14.27,27.21,16.92,42.61,2.87,16.68,12,29.6,24.44,40.57a131.9,131.9,0,0,1,11,11.58c11.47,12.85,27.51,14,42.87,14.33,8.37.2,16.84-4.19,25.28-6.4A11.92,11.92,0,0,0,402.3,367c4.94-7.31,11.77-12.86,17.79-19.17,7.42-7.79,14.09-16.09,17.28-27,3.77-12.88,5.47-26.47,12.11-38.47,5.27-9.53,9.12-19.5,10-30.54,1.14-15.13,6.95-30.16.35-45.43-1.24-2.87-2.15-5.73-5.12-7.1-10.52-4.86-13.63-12.8-10.12-23.64a11.86,11.86,0,0,0,.34-2.25C445.84,166,450.23,161.57,458.39,160.4Zm-10,17.55c4.18.36,7.3.94,10.4.81,3.31-.14,3.11-3.27,3.48-5.53.25-1.48-.84-1.87-2.18-1.3C456.35,173.48,452.33,174.41,448.35,178ZM283,177.72c-2.38-2.34-5.45-2.84-8.07-4.16-2.18-1.11-2.55.7-2.84,2.18s-1.08,3.35,1.47,3.25C276.65,178.88,279.94,180.17,283,177.72Zm.5,9.39c-4.17,0-7.26-.16-10.33,0-2.68.17-1.8,2.36-1.67,3.88.17,2,1.51,1.79,2.85,1.19C277.19,191,280.4,190.45,283.54,187.11Zm164.43,0c2,2.86,4.24,3.53,6.3,4.34s2.71-.62,3.1-2.21c.49-2.06-1-2.09-2.35-2.12C453,187,450.88,187.07,448,187.07Z\" transform=\"translate(-98.21 -70.27)\"/><path d=\"M555.08,607.87c0,3.61.18,7.23-.05,10.82s1.86,8.15-4.82,8.71c-2.39.2-1.2,3.92-1.3,6.06-.14,3,.65,6.39-4.28,6a2,2,0,0,0-2.16,2.16c.14,3.27-1.47,4.38-4.5,4.17a1.37,1.37,0,0,0-1.55,1.33c.48,6.11-4,4.61-7.27,4.69-4.75.12-9.49.11-14.24.1-1.92,0-3.77,0-3.86-2.86-.09-3,1.57-3.42,3.93-3.37s4.94.06,7.41,0c3.5-.1,8,1.49,7.68-4.92-.09-1.7,1.92-1.56,3.18-1.51,2.76.11,3-1.53,3-3.68-.11-2.66-2-2.24-3.68-2.29-1.9-.05-3.8,0-5.7-.07-1.32,0-3.05.07-3-1.75.1-3.36-1.17-4.85-4.61-4.76-2.22.06-2-1.88-2-3.36q-.06-15.1-.07-30.2c0-5.84,4.47-3.14,7.09-3.54,2.78-.41,5.75-.61,5.65,4-.21,9.3.23,18.62-.17,27.91-.22,5.1,2.2,5.3,6.15,5.32s6.86,0,6.61-5.44c-.42-9.1,0-18.23-.23-27.34-.19-6.34,4.3-4.25,7.46-4.59,3.49-.38,5.83.28,5.38,4.83s-.1,9.11-.1,13.66Z\" transform=\"translate(-98.21 -70.27)\"/><path d=\"M171,620.38c0-2.65-.08-5.32,0-8s-.27-4.58-3.61-4.2c-2.28.26-2.86-1.06-2.93-3.11s.75-3.3,2.89-3.21c3.18.13,3.78-1.61,3.6-4.32s-.15-5.69-.11-8.54-.67-6.45,4.26-6.12c.5,0,1.55-.86,1.54-1.3-.13-6,4.24-4.47,7.56-4.53,4.94-.07,9.87,0,14.81,0,2.36,0,3.47.89,3.38,3.37-.08,2.31-1.38,2.83-3.33,2.83-3.42,0-6.83,0-10.25.07-1.14,0-2.82-.4-3.33.19-3.93,4.5-1,10-1.79,15-.49,2.94,1.89,3.28,4.08,3.33,3.8.07,7.6.11,11.39.07,2.57,0,3.19,1.36,3.13,3.62s-1.39,2.75-3.36,2.72c-3.6-.06-7.22.19-10.82,0-3.39-.2-4.78.9-4.61,4.49.26,5.5,0,11,.07,16.52.13,6.19-4.53,3.53-7.34,4-3.05.48-5.76.14-5.31-4.26C171.19,626.1,171,623.23,171,620.38Z\" transform=\"translate(-98.21 -70.27)\"/><path d=\"M473.13,611.19c0-3.22,0-6.45,0-9.67,0-3,.77-6.42-4.24-5.93-1.77.18-2-1.31-2-2.74,0-1.6,0-3.36,2.15-3.24,5.4.31,4.57-3.52,4.19-6.54-.57-4.55.68-6.61,5.63-6.29,4.19.28,8.33-.09,7.12,6.14-1.06,5.41,1.52,7.07,6.53,6.65,3-.25,6.07,0,9.11,0,2.09,0,3.06.91,3,3.1s-.92,3.07-3.07,3c-4,0-8,.13-12,0-2.68-.09-3.7.92-3.67,3.62.1,8,.05,15.94,0,23.91,0,2.68,1.16,3.66,3.81,3.56,3.79-.15,7.59,0,11.39,0,2.28,0,3.5.71,3.51,3.25s-1.17,3.26-3.48,3.23c-6.07,0-12.14,0-18.22,0a6.45,6.45,0,0,1-1.63-.12c-.43-5.49-8.76-5.4-8.16-11.71.32-3.38.05-6.82.05-10.24Z\" transform=\"translate(-98.21 -70.27)\"/><path d=\"M385.31,633.21c-5.13,0-10.27-.08-15.39,0-2.59.06-3.84-.73-3.8-3.55s1.77-2.82,3.78-3c8.87-.66,8.83-.69,8.74-9.86-.05-5.13-.35-10.29.15-15.37s-1.64-6.41-6.15-5.79a31.26,31.26,0,0,1-4,0c-2.06,0-2.5-1.24-2.45-3s.13-3.16,2.29-3.17c6.84,0,13.67-.11,20.51,0,3,0,2.33,2.39,2.33,4.2,0,8.93.26,17.87-.11,26.79-.2,4.82.92,7.27,6.17,6.35a26,26,0,0,1,3.42,0c2-.06,3.15.65,3.19,2.94s-.84,3.46-3.3,3.42c-5.13-.08-10.26,0-15.39,0Z\" transform=\"translate(-98.21 -70.27)\"/><path d=\"M416.51,611c0-3.6.12-7.21,0-10.81-.13-2.83.24-4.9,3.81-4.57,1.22.11,2.33-.42,2.37-1.84.19-6.68,5.23-3.6,8.4-4.15,1.45-.25,2.67.43,2.57,2.19-.08,1.4.38,2.78-1.5,3.83-4.31,2.41-4.32,10.15-.29,12.67,3,1.86,2.77,4.55.05,5.93-5.21,2.65-2.47,7.07-2.47,10.44,0,3.57,3.85,1.77,6,2,3.2.3,6.44.17,9.66.15,2.18,0,3.08,1,3,3.13-.08,2-.65,3.29-2.94,3.28-6.45,0-12.9,0-19.35,0-1.79,0-2.86-.68-3-2.58-.11-1.27.15-3.29-1.45-3.32-6.54-.09-4.75-4.77-4.86-8.38-.09-2.66,0-5.31,0-8Z\" transform=\"translate(-98.21 -70.27)\"/><path d=\"M238.36,608.12c2.5,1.3,8.58-2.93,8.38,4.73a1.58,1.58,0,0,0,1.1,1.07c6.72-.19,4.77,4.73,5,8.36a9.79,9.79,0,0,1,0,1.71c-.12,1.17-9.63,9.28-10.84,9.18-1.57-.13-3.69.88-4.41-1.38-.51-1.57-.91-3.56.69-4.74s1.49-2.47,1.63-4c.76-8.41.61-8.58-7.88-8.63-2.28,0-4.56-.07-6.83,0s-4.2-.28-4.06-3.29c.05-1.14-.14-2.22-1.58-2.65-1.63-.49-4.32.74-4.59-2.09a64.29,64.29,0,0,1,0-9.1c.07-1.43,1.3-1.74,2.51-1.69,2.6.11,3.87-1,3.73-3.68-.1-2,1.21-2.75,2.93-2.53,3.11.39,6.76-1.36,9.18,1.13,1,1,2.06,4.86-1.73,5.11-7.38.47-3.29,5.85-3.84,8.95-.74,4.25,2.93,3.39,5.41,3.55C234.71,608.2,236.24,608.12,238.36,608.12Z\" transform=\"translate(-98.21 -70.27)\"/><path d=\"M278.07,610.63c0,3.61-.05,7.21,0,10.82,0,2.34-.63,4.88,3,5.68,1.89.42,1.53,2.83,1.21,4.48s-1.86,1.74-3.19,1.59c-3.29-.36-8.25,1.86-7.71-4.79A1.36,1.36,0,0,0,270,627c-5.55.53-4.71-3.27-4.68-6.68,0-7,0-14-.06-21.06,0-1.49-.4-3.45,1.81-3.44,3.23,0,4.49-.94,4.85-4.47.38-3.72,4-1.48,6.15-1.83,1.56-.25,4-.84,4.38,2.16.3,2.35.11,3.94-2.86,4.34-2,.27-1.4,2.4-1.42,3.82-.07,3.6,0,7.21,0,10.81Z\" transform=\"translate(-98.21 -70.27)\"/><path d=\"M315.8,611.12c0-3.61.05-7.22,0-10.83-.05-2.68,0-5,3.8-4.63a1.88,1.88,0,0,0,2.29-1.89c.18-1.54-.78-3.88,1.72-4.17a39.06,39.06,0,0,1,7.94.11c1.44.12,1.46,1.53,1.45,2.68,0,1.3.26,3-1.57,3.13-3.57.24-3,2.79-3,5q0,10,.05,19.95c0,2.81-1.13,6.18,3.54,6.9,1.47.22,1,2.23.93,3.52-.05,1.67-1.12,2.57-2.6,2.24-3.21-.71-8.73,2.83-8.6-4.44,0-.44-.57-1.27-.89-1.28-7.6-.34-4.65-6.08-5.09-10a56.79,56.79,0,0,1,0-6.26Z\" transform=\"translate(-98.21 -70.27)\"/><path d=\"M303.18,611.5c.71,2.47.17,5.68.11,8.72-.08,3.28.78,7.24-4.75,6.81-1.08-.08-1.49.91-1.7,1.93-.3,1.51.7,3.84-1.88,4.09s-5.29.74-7.31-.24c-2.68-1.3-2.64-4.59.11-5.63s2.77-2.57,2.76-4.7c0-7.61-.07-15.21,0-22.82,0-2,.21-3.82-2.65-4-2.2-.16-1.75-2.06-1.76-3.53a2.33,2.33,0,0,1,2.92-2.59c3.15.44,8.32-2.52,7.93,4.39,0,.34.2,1,.39,1C308.46,597,301.49,605.63,303.18,611.5Z\" transform=\"translate(-98.21 -70.27)\"/><path d=\"M454.33,604.44c-.05,10.4-.05,10.4-9.83,10.07l-4.56-.18c-1.39-.06-2.81-.16-2.79-2,0-1.41-.5-2.85,1.21-4a7.5,7.5,0,0,0,0-12.72c-1.44-1-1.25-2.17-1.27-3.44s.32-2.67,1.73-2.39c3.42.66,9-3.49,9.55,4,0,.48.49,1.34.78,1.35C456.83,595.3,453.52,601.24,454.33,604.44Z\" transform=\"translate(-98.21 -70.27)\"/><path d=\"M385.09,583c-5.59,1.5-6.36-1.32-6.61-6.25-.31-6,2.58-6.07,7.08-6.21,4.75-.15,6.21,1.31,6,6.09S391,584.65,385.09,583Z\" transform=\"translate(-98.21 -70.27)\"/><path d=\"M347,602c-3.11.12-6.45.76-6.08-4.13.13-1.74-1.25-2-2.65-2.22-2.57-.38-1.81-2.43-1.78-4,0-2.14,1.7-2.35,3.21-2.19,3.24.35,8.12-1.9,7.7,4.7-.1,1.46,1.5,1.5,2.6,1.43,2.64-.17,3.77.9,3.64,3.61-.15,3.27-2.51,2.64-4.48,2.78C348.41,602,347.66,602,347,602Z\" transform=\"translate(-98.21 -70.27)\"/><path d=\"M348.18,620.76c2.11.33,7.42-.82,4.95,3.72-1.65,3-5.71,5.49-8.39,8.6-.79.92-3.61.11-5.49.08-1.44,0-2.67-.36-2.73-2.12s-.71-3.53,1.65-4.2c1.05-.3,2.68-.22,2.61-1.65C340.5,619.56,344.47,620.79,348.18,620.76Z\" transform=\"translate(-98.21 -70.27)\"/><path d=\"M224.4,633.2c-2.08,0-4.16-.06-6.24,0s-3.3-.53-3.34-2.79.55-3.67,3.14-3.64c4.34.06,8.69,0,13,0,2.18,0,2.93,1,3,3.11,0,2.42-1,3.46-3.33,3.38-2.08-.07-4.16,0-6.24,0Z\" transform=\"translate(-98.21 -70.27)\"/><path d=\"M244.88,595.73c-1.32,0-2.65,0-4,0-2.11.07-3.54-.24-3.6-3-.06-3,1.55-3.43,3.88-3.4,2.64,0,5.29,0,7.93,0,2.15,0,3.64.45,3.64,3.11,0,2.41-.9,3.48-3.35,3.31C247.91,595.65,246.39,595.74,244.88,595.73Z\" transform=\"translate(-98.21 -70.27)\"/><path d=\"M432.82,233c11.34,7.52,21.5,15.93,19.53,30.75-1.75,13.18-5.81,23.12-21.91,24.31-7.76.57-15.51,2.11-23.24.65-15.39-2.9-30.92,3.27-45.73.64-20.37-3.62-40.39,1.93-60.6-1-16.23-2.38-19.95-10.62-22-24.3-2.31-15.25,8.24-23.51,20.26-31.52-.95,3.51-1.32,6.18-2.38,8.54-2.64,5.92-1.79,11.37,3,15.37,5.59,4.7,12.25,6.91,19.57,3.85,6-2.5,11.94-5,17.67-7.9,7.65-3.94,14.12-2.52,20.32,3,7.33,6.56,9.48,6.55,16.75-.07,6-5.46,12.17-6.56,19.8-3.14,8.05,3.6,15.59,8.79,24.87,9.25,12,.58,19.55-9,16-20.32C433.9,238.63,432.56,236.26,432.82,233Z\" transform=\"translate(-98.21 -70.27)\"/><path d=\"M327.35,292.47c8-.93,14.94-2.41,22.16,0a50.15,50.15,0,0,0,30.3.45c7.82-2.26,15.26-2.11,23.79-.27-9.25,12.28-21.07,18.43-36,19C351.19,312.3,338,306.22,327.35,292.47Z\" transform=\"translate(-98.21 -70.27)\"/><path d=\"M438.79,180.45c-.67,2.65-2.29,1.72-3.83.92-4.22-2.19-8.41-4.43-12.63-6.6-5.6-2.88-10.69-2.51-15.81,1.61C399,182.44,391,188,383.31,193.87c-2.93,2.23-5.88,2.94-8.68.28-3.45-3.3-4.74-10.51-1.73-12.25,11.81-6.81,22-17.43,37-17.28,9.87.1,18.22,4.79,26.13,10.21C437.8,176.07,438,178.43,438.79,180.45Z\" transform=\"translate(-98.21 -70.27)\"/><path d=\"M360.36,186.45c-1.56,2.82-1.9,6.81-5.21,8.74-3.08,1.8-5.73-.05-8.25-2-7.54-5.76-15.26-11.27-22.72-17.13-4.75-3.73-9.62-4.07-14.83-1.58-3.94,1.88-7.76,4-11.64,6-1.47.76-3.29,2.41-4.61.92-1.66-1.88.08-4.3,1.3-5.49a40.63,40.63,0,0,1,14.51-8.61c10.7-3.93,21-4,30.81,3,5.25,3.72,11,6.73,16.64,9.87C358.82,181.52,359.71,183.62,360.36,186.45Z\" transform=\"translate(-98.21 -70.27)\"/><path d=\"M301.41,222.15c6-4.15,7.68-10.75,11.15-16.2,4.44-7,12.2-7.41,19.87-6.11,6.47,1.1,10.9,5.07,13.78,10.65,1.67,3.23-1.17,5.33-3.25,7.07-2.78,2.32-3.25,4.37-.14,7.17-6.72-2.83-12.84-6.43-20.12-6.62S308.86,221.39,301.41,222.15Z\" transform=\"translate(-98.21 -70.27)\"/><path d=\"M429.87,222.77c-13.84-4.63-27.39-8-40.75,2.26,3.09-4,.77-6.12-1.73-8.22-3.4-2.84-3.48-5.81-.68-9.29,4.89-6.08,11.28-9.23,18.83-8.34,7.19.84,13.66,3.79,15.56,11.95C422.29,216.22,427.39,218.26,429.87,222.77Z\" transform=\"translate(-98.21 -70.27)\"/><path d=\"M384.92,245.93c1.08-8.73-5.58-12.17-10.53-16.62-5.71-5.13-4-11.59-4.45-17.5,1.55-.68,1.89-.06,1.9.43.17,9,4,15.74,11.34,21.08C387.6,236.53,387.62,239.3,384.92,245.93Z\" transform=\"translate(-98.21 -70.27)\"/><path d=\"M359.88,210.47c1.4,7.59,2.54,14.94-4.57,20.29-5,3.75-9.89,7.61-9.15,15.2-2.61-4.83-2.34-9.22,1.53-12.22C355.36,227.78,360.27,220.65,359.88,210.47Z\" transform=\"translate(-98.21 -70.27)\"/><path d=\"M430.41,195.49c9.56,4.3,11.52,12.11,5,18.94C436.48,207.37,434.23,202,430.41,195.49Z\" transform=\"translate(-98.21 -70.27)\"/><path d=\"M295.55,213.69c-6.22-5.7-4.25-13.62,5-18.29C297.36,201.77,294.39,207.23,295.55,213.69Z\" transform=\"translate(-98.21 -70.27)\"/></g></g></svg>\n                </div>\n\n                <div className=\"form-parent\">\n                    <Form id =\"register\">\n                    <div className=\"user\"></div>\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                        <Form.Label className=\"login-label\">Username</Form.Label>\n                        <Form.Control className=\"form-control\" type=\"email\" placeholder=\"Enter username\" ref={usernameRef} onKeyPress={handleLoginKeypress} />\n                    </Form.Group>\n\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                        <Form.Label className=\"login-label\">Password</Form.Label>\n                        <Form.Control className=\"form-control\" type=\"password\" placeholder=\"********\" ref={passwordRef} onKeyPress={handleLoginKeypress} />\n                    </Form.Group>\n                    <br/>\n                    <Form.Text className=\"text-muted\" id=\"loadingTextId\"></Form.Text>\n                    </Form>\n                    <div className=\"form-check form-switch\">\n                        <input className=\"form-check-input\" type=\"checkbox\" id=\"userSwitch\" onClick={changeUser}/>\n                    </div>\n            \n        </div>\n    </div>\n    )\n}\n}\n\nexport default Login\n\n","import React from 'react'\nimport Dinero from '../../../node_modules/dinero.js'\n\nconst Account = ({acct, emailDisplay, toggleCheck}) => {\n    let acctBal = Dinero({ amount: parseInt(acct[\"Balance\"] * 100), currency: 'PHP' }).toFormat()\n\n    function handleClick() {\n        toggleCheck(acct.id)\n    }\n\n    return (\n                <tr>\n                    {emailDisplay && <td><input type=\"checkbox\" defaultChecked={acct.ticked} onChange={handleClick}/></td>}\n                    <td>{acct.id}</td>\n                    <td>{acct['Account Name']}</td>\n                    {emailDisplay && <td>{acct['Email']}</td>}\n                    <td>{acctBal}</td>\n                </tr>\n    )\n}\n\nexport default Account\n","import React, {useState, useEffect} from 'react'\nimport Table from 'react-bootstrap/Table';\nimport Account from './Account'\n\nconst AcctTable = ({emailDisplay, toggleCheck, accts}) => {\n    return (\n        <div>\n            {/* Accounts List Table */}\n            <div className=\"table-container\">\n                <Table responsive className =\"container\" id=\"userTable\">\n                    <thead>\n                        <tr>\n                        <th></th>\n                        <th>Account No.</th>\n                        <th>Account Name</th>\n                        <th>Email</th>\n                        <th>Balance</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {accts.map(acct => {\n                            return <Account emailDisplay={true} toggleCheck={toggleCheck} key={acct.id} acct = {acct}/>\n                        })}\n                    </tbody>\n                </Table>\n            </div>\n        </div>\n    )\n}\n\nexport default AcctTable\n","import React, {useState, useRef, useEffect} from 'react'\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Modal from 'react-bootstrap/Modal';\nimport '../../css/Account.css'\nimport AcctTable from './AcctTable'\n\nconst LOCAL_STORAGE_KEY_1 = 'userList';\nconst LOCAL_STORAGE_KEY_3 = 'accountListTransactions'\n\nconst AccountList = (props) => {\n    //modal display states\n    const [show, setShow] = useState(false);\n\n    const [validated, setValidated] = useState(false);\n\n    //account data states\n    const [accts, setAccts] = useState([]);\n    const [acctNum, setAcctNum] = useState('');\n    const [bal, setBal] = useState('');\n    const [acctName, setAcctName] = useState('');\n    const [acctEmail, setAcctEmail] = useState('');\n    const [pword, setPword] = useState('');\n    const [adminLocation, setAdminLocation] = useState('');\n\n    //error messages\n    const [fullNameErrorMessage, setFullNameErrorMessage] = useState('');\n    const [emailErrorMessage, setEmailErrorMessage] = useState('');\n    const [passwordErrorMessage, setPasswordErrorMessage] = useState('');\n\n    const addButton = \"{+}\";\n    var nameChecker;\n    var emailChecker;\n    var passwordChecker;\n\n    // input reference\n    const acctNameRef = useRef();\n    const acctEmailRef = useRef();\n    const insecurePwordRef = useRef();\n    const initBalRef = useRef();\n\n    // on mount, will load existing accounts and transactions\n    useEffect(() => {\n        const storedAccts = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY_1));\n        if (storedAccts) setAccts(storedAccts);\n    }, [])\n\n    // on modify account, will add to local storage\n    useEffect(() => {\n        localStorage.setItem(LOCAL_STORAGE_KEY_1, JSON.stringify(accts));\n        localStorage.setItem(LOCAL_STORAGE_KEY_3, JSON.stringify(accts));\n    }, [accts])\n\n    // functions for modal\n    const handleClose = () => setShow(false);\n    const handleShow = () => {\n        setShow(true)\n        generateAcctNum()\n        generateLocation()\n        setValidated(false)\n        setFullNameErrorMessage('')\n        setEmailErrorMessage('')\n        setPasswordErrorMessage('')\n        setAdminLocation('')\n    };\n\n    // Account number generator\n    const generateAcctNum = () => {\n        let generatedAcctNum = Date.now().toString().substr(0,12)\n        setAcctNum(generatedAcctNum)\n    }\n\n    // Geolocation generator\n    const generateLocation = () => {\n        if('geolocation' in navigator) {\n            console.log('geolocation available') \n            navigator.geolocation.getCurrentPosition(function(position) {\n                setAdminLocation(position.coords.latitude + ', ' + position.coords.longitude)\n            })\n        }\n        else {\n            console.log('geolocation not available')\n        }\n    }\n    \n\n    // Function for error checking\n    const handleErrors = (event) => {\n        nameChecker = false;\n        emailChecker = false;\n        passwordChecker = false;\n        var inputEmail = accts.find(acct => {return acct[\"Email\"] === acctEmailRef.current.value})\n        if (!acctNameRef.current.value) {\n            setFullNameErrorMessage('Name is required')\n            acctNameRef.current.style.borderColor = 'red'\n            acctNameRef.current.focus()\n        }\n        else if (!isNaN(acctNameRef.current.value.substring(0, 1))) {\n            setFullNameErrorMessage('Please enter valid name')\n            acctNameRef.current.style.borderColor = 'red'\n            acctNameRef.current.focus()\n        }\n        else {\n            setFullNameErrorMessage('')\n            acctNameRef.current.style.borderColor = 'green'\n            nameChecker = true;\n        }\n        if (!acctEmailRef.current.value) {\n            setEmailErrorMessage('Email is required')\n            acctEmailRef.current.style.borderColor = 'red'\n            if(nameChecker) {\n                acctEmailRef.current.focus()\n            }\n        }  \n        else if (!(/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(acctEmailRef.current.value))){\n            setEmailErrorMessage('Please enter valid email')\n            acctEmailRef.current.style.borderColor = 'red' \n            if(nameChecker) {\n                acctEmailRef.current.focus()\n            }\n        }\n        else if (inputEmail != null) {\n            setEmailErrorMessage('Email already exists')\n            acctEmailRef.current.style.borderColor = 'red'\n            if(nameChecker) {\n                acctEmailRef.current.focus()\n            }\n        }\n        else {\n            setEmailErrorMessage('')\n            acctEmailRef.current.style.borderColor = 'green'\n            emailChecker = true;\n        }\n        if(!insecurePwordRef.current.value){\n            setPasswordErrorMessage('Password is required')\n            insecurePwordRef.current.style.borderColor = 'red'\n            if(emailChecker && nameChecker) {\n                insecurePwordRef.current.focus()\n            }\n        } \n        else if (insecurePwordRef.current.value.length < 8) {\n            setPasswordErrorMessage('Password is too short')\n            insecurePwordRef.current.style.borderColor = 'red'\n            if(emailChecker && nameChecker) {\n                insecurePwordRef.current.focus()\n            }\n        } \n        else {\n            setPasswordErrorMessage('')\n            insecurePwordRef.current.style.borderColor = 'green'\n            passwordChecker = true;\n        }\n    }\n\n    // Function for account creation\n    const handleCreateAcct = (event) => {\n        handleErrors();\n\n        if(!passwordChecker || !emailChecker || !nameChecker) {\n            event.preventDefault();\n            event.stopPropagation();\n            return;\n        }\n        else { \n            event.preventDefault();\n            setShow(false);\n            const newAcct = {\n                id: acctNum, \n                'Account Name': acctName, \n                'Email': acctEmail, \n                'Password': pword, \n                'Balance': bal,\n                'Location': adminLocation,\n                ticked: false,\n                expenses: []\n            }\n\n            //add new user to previous set of users using spread operator for previous data \n            setAccts(prevAccts => {\n                return [...prevAccts, newAcct]\n            })\n            \n            setAcctName('');\n            setBal('');\n            setAcctEmail('');\n            setPword('');\n            acctNameRef.current.value = null\n            acctEmailRef.current.value = null\n            insecurePwordRef.current.value = null\n            initBalRef.current.value = null\n        }\n    \n    } \n\n    useEffect(() => {\n        // disable changing of number values via mousewheel\n        var numberInput;\n            numberInput = document.querySelectorAll('.number-input');\n            numberInput.forEach(input => {\n                input.addEventListener(\"mousewheel\", \n                    function(event){ \n                        this.blur() \n                    }\n                );\n            })\n    }, [])\n\n    const handleDelete = (e) => {\n        const newAccts = [...accts]\n        const updatedUserList = newAccts.filter(acct => !acct.ticked)\n        setAccts(updatedUserList)\n    }\n\n    function toggleCheck(id) {\n        const newAccts = [...accts]\n        const acct = newAccts.find(acct => acct.id === id)\n        acct.ticked = !acct.ticked\n        setAccts(newAccts)\n    }\n\n    return (   \n        <div className=\"accountList\">\n            <h1 className=\"glitch white-glitch\" data-text=\"Accounts\"> Accounts </h1>\n\n            {/* Add Account Holder Button */}\n            <Button variant=\"primary\" id=\"createAccount\" onClick={handleShow}>{addButton}</Button>\n\n            <Button variant=\"primary\" id=\"deleteAccounts\" onClick = {handleDelete}>Delete Selected Accounts</Button>\n\n            {/* Accounts List Table */}\n            <AcctTable emailDisplay={true} toggleCheck={toggleCheck} accts={accts}/>\n            \n                \n            {/*Add Account Modal*/}\n            <Modal show={show} onHide={handleClose} id=\"register_modal\">\n                <Modal.Header id=\"modal_head\">\n                    <Modal.Title>Create New Account</Modal.Title>\n                </Modal.Header>\n                <Modal.Body id=\"modal_body\">\n                    <Form  id=\"register2\" noValidate validated={validated} onSubmit={handleCreateAcct} >       \n                        <Form.Group className=\"mb-3\">\n                            <Form.Label id=\"create-name\">Account Holder Name:</Form.Label>\n                            <Form.Control type=\"text\" placeholder=\"Full Name\" required ref={acctNameRef} id=\"name_input\" onChange={(e) => setAcctName(e.target.value)} /> {/*onKeyPress={handleRegKeypress} />*/}\n                            <div className=\"create-account-placeholder\">{fullNameErrorMessage}<Form.Text className=\"text-muted\"></Form.Text></div>\n                        </Form.Group>\n                        <Form.Group className=\"mb-3\">\n                            <Form.Label id=\"create-email\">Email address:</Form.Label>\n                            <Form.Control type=\"email\" placeholder=\"name@example.com\" required ref={acctEmailRef} id=\"email_input\" onChange={(e) => setAcctEmail(e.target.value)}/>\n                            <div className=\"create-account-placeholder\">{emailErrorMessage}<Form.Text className=\"text-muted\"></Form.Text></div>\n                        </Form.Group>\n                        <Form.Group className=\"mb-3\">\n                            <Form.Label id=\"create-password\">Password:</Form.Label>\n                            <Form.Control type=\"password\" placeholder=\"********\" min=\"5\" required ref={insecurePwordRef}  id=\"password_input\" onChange={(e) => setPword(e.target.value)}/>\n                            <div className=\"create-account-placeholder\">{passwordErrorMessage}<Form.Text className=\"text-muted\"></Form.Text></div>\n                        </Form.Group>\n                        <Form.Group className=\"mb-3\">\n                            <Form.Label id=\"create-balance\">Initial Balance:</Form.Label>\n                            <Form.Control className=\"number-input\" min=\"0\" type=\"number\" placeholder=\"0\" ref={initBalRef}  id=\"balance_input\" onChange={(e) => setBal(e.target.value)} onInput={props.validate}/>\n                            <div className=\"create-account-placeholder\"><Form.Text className=\"text-muted\"></Form.Text></div>\n                        </Form.Group>\n                        {<Button id=\"close\" variant=\"secondary\" onClick={handleClose}>\n                            Close\n                        </Button>}\n                        <Button type=\"submit\" id=\"create_account\" variant=\"primary\">\n                            Create Account\n                        </Button> \n                    </Form>\n                </Modal.Body>\n            </Modal>\n        </div>\n    )\n}\n\nexport default AccountList;\n","import React from 'react'\nimport Dinero from '../../../node_modules/dinero.js'\n\n\nconst User = ({transaction}) => {\n    let formattedAmt = Dinero({ amount: parseInt(transaction.transactionAmt * 100), currency: 'PHP' }).toFormat()\n    return (\n                <tr>\n                    <td>{transaction.transactionDate}</td>\n                    <td>{transaction.transactionType}</td>\n                    <td>{transaction.transactionFromAcctNum || 'Cash'}</td>\n                    <td>{transaction.transactionToAcctNum || 'Cash'}</td>\n                    <td>{formattedAmt}</td>\n                </tr>\n\n    )\n}\n\nexport default User\n","import React, {useState, useEffect} from 'react'\nimport Transaction from './Transaction'\nimport Table from 'react-bootstrap/Table';\nimport '../../css/Account.css'\n\nconst LOCAL_STORAGE_KEY_2 = 'transactionList';\n\nconst UserTransaction = () => {    \n    const [transactionHistory, setTransactionHistory] = useState([]);\n\n    useEffect(() => {\n        const storedTransactions = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY_2));\n        if (storedTransactions) setTransactionHistory(storedTransactions);\n    }, [])\n\n    return (\n        <div className=\"accountList\">\n            <h1 className=\"glitch white-glitch\" data-text=\"Transaction History\">Transaction History</h1>\n            <div className=\"table-container\">\n                {/* Transactions Table */}\n                <Table responsive className =\"container\" id=\"transactionTable\">\n                    <thead>\n                        <tr>\n                            <th>Transaction Date</th>\n                            <th>Type</th>\n                            <th>From</th>\n                            <th>To</th>\n                            <th>Amount</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {transactionHistory.map(transaction => {\n                            return <Transaction key={transaction.transactionId} transaction = {transaction}/>\n                        })}\n                    </tbody>\n                </Table>\n\n            </div>\n        </div>\n    )\n}\n\nexport default UserTransaction\n","import React, {useState, useEffect, useRef} from 'react'\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport { v4 as uuidv4 } from 'uuid';\nimport '../../css/Deposit.css'\nimport Table from 'react-bootstrap/Table';\nimport Account from '../Accounts/Account'\n\nconst LOCAL_STORAGE_KEY_1 = 'userList';\nconst LOCAL_STORAGE_KEY_2 = 'transactionList';\nconst LOCAL_STORAGE_KEY_3 = 'accountListTransactions';\n\nconst Withdraw = (props) => {\n    const generateDate = props.generateDate\n    const TransactionClass = props.TransactionClass\n    const validate = props.validate\n\n    const [accts, setAccts] = useState([]);\n    const [acctList, setAcctList] = useState([]);\n    const [fromAcctNum, setFromAcctNum] = useState('');\n    const [withdrawAmt, setWithdrawAmt] = useState(0);\n    const [transactionHistory, setTransactionHistory] = useState([]);\n\n    //messages\n    const [withdrawMessage, setWithdrawMessage] = useState('');\n\n    const withdrawAmtRef = useRef();\n\n    useEffect(() => {\n        const storedAccts = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY_1));\n        if (storedAccts) setAccts(storedAccts);\n        const storedTransactions = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY_2));\n        if (storedTransactions) setTransactionHistory(storedTransactions);\n        if (storedAccts) setAcctList(storedAccts);\n    }, [])\n\n    //filterlist\n    useEffect(() => {\n        localStorage.setItem(LOCAL_STORAGE_KEY_3, JSON.stringify(acctList));\n    }, [acctList])\n\n    // on modify account, will add to local storage\n    useEffect(() => {\n        localStorage.setItem(LOCAL_STORAGE_KEY_1, JSON.stringify(accts));\n    }, [accts])\n\n    // on new transactions, will add to local storage\n    useEffect(() => {\n        localStorage.setItem(LOCAL_STORAGE_KEY_2, JSON.stringify(transactionHistory));\n    }, [transactionHistory])\n\n    //Function to withdraw\n    const handleWithdraw = () => {\n        const fromAcct = accts.find(acct => {return acct.id === fromAcctNum})\n        if(fromAcct) {\n            if(fromAcct[\"Balance\"]>= parseInt(withdrawAmt*100)/100) {\n                setWithdrawMessage(`Withdrawing ${withdrawAmt} from ${fromAcct[\"Account Name\"]}'s account...`)\n                setTimeout(() =>{\n                    var newBal = (fromAcct[\"Balance\"]*100 - withdrawAmt*100)/100;\n                    setAccts([...accts], fromAcct[\"Balance\"] = newBal);\n                    var date = generateDate();\n                    var newTransaction = new TransactionClass(uuidv4(), date, fromAcctNum, null, \"Withdraw\", withdrawAmt);\n                    setTransactionHistory(prevTransactions => {\n                        return [...prevTransactions, newTransaction]\n                    })\n                    withdrawAmtRef.current.value = null\n                    setWithdrawMessage(`Successfully withdrawn. The new balance of ${fromAcct[\"Account Name\"]} is ${newBal}`)\n                }, 2000)\n            }\n            else {\n                setWithdrawMessage('Insufficient Funds')\n            }\n        }\n        else {\n            setWithdrawMessage('Account does not exist')\n        }\n    }\n\n    const handelAcctNumKeypress = (e) => {\n        setWithdrawMessage('')\n    }\n\n    return (\n        <div className=\"main-parent\"> \n            <div className=\"transact-parent\">\n                <h1  className=\"glitch\" data-text=\"Withdraw\"> Withdraw </h1>\n\n                {/* Withdraw Form */}\n                <div className=\"transact-sub\">\n                    <div className=\"transact-sub2\">\n                        <Form className=\"form-class\">\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label>Account No.</Form.Label>\n                                <Form.Control type=\"number\" className=\"number-input\" placeholder=\"Account No.\" onChange={(e) => setFromAcctNum(e.target.value)} onKeyPress={(e) => handelAcctNumKeypress(e)}/>\n                            </Form.Group>\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label>Amount:</Form.Label>\n                                <Form.Control ref={withdrawAmtRef} className=\"number-input\" min=\"1\" type=\"number\" placeholder=\"0\" onInput={validate} onChange={(e) => setWithdrawAmt(e.target.value)} onKeyPress={(e) => setWithdrawMessage('')}/>\n                            </Form.Group>\n                        </Form>\n                        <div className=\"muted-container\">\n                            <Form.Text id=\"errorMessage\">{withdrawMessage}</Form.Text>\n                        </div>\n                        <Button className=\"transact-button\" variant=\"primary\" onClick={handleWithdraw}>\n                            Withdraw\n                        </Button>\n                    </div>\n                </div>\n            </div>\n            <div className=\"accountList transactionAccountList\">\n                {/* Accounts List Table */}\n                <div className=\"table-container\">\n                    <Table responsive className =\"container\" id=\"userTable\">\n                        <thead>\n                            <tr>\n                            <th>Account No.</th>\n                            <th>Account Name</th>\n                            <th>Balance</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {acctList\n                                .filter(acct => fromAcctNum === '' || acct.id.includes(fromAcctNum))\n                                .map(acct => {\n                                    return <Account emailDisplay={false} key={acct.id} acct = {acct}/>\n                                })\n                            }\n                        </tbody>\n                    </Table>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Withdraw\n","import React, {useState, useEffect, useRef} from 'react'\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport { v4 as uuidv4 } from 'uuid';\nimport '../../css/Deposit.css'\nimport Table from 'react-bootstrap/Table';\nimport Account from '../Accounts/Account'\n\nconst LOCAL_STORAGE_KEY_1 = 'userList';\nconst LOCAL_STORAGE_KEY_2 = 'transactionList';\nconst LOCAL_STORAGE_KEY_3 = 'accountListTransactions';\n\nconst Deposit = (props) => {\n    const generateDate = props.generateDate\n    const TransactionClass = props.TransactionClass\n    const validate = props.validate\n\n    const [accts, setAccts] = useState([]);\n    const [acctList, setAcctList] = useState([]);\n    const [fromAcctNum, setFromAcctNum] = useState('');\n    const [depositAmt, setDepositAmt] = useState(0);\n    const [transactionHistory, setTransactionHistory] = useState([]);\n\n    //messages\n    const [depositMessage, setDepositMessage] = useState('');\n\n    const depositAmtRef = useRef();\n\n    useEffect(() => {\n        const storedAccts = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY_1));\n        if (storedAccts) setAccts(storedAccts)\n        const storedTransactions = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY_2));\n        if (storedTransactions) setTransactionHistory(storedTransactions);\n        if (storedAccts) setAcctList(storedAccts);\n    }, [])\n\n    //filterlist\n    useEffect(() => {\n        localStorage.setItem(LOCAL_STORAGE_KEY_3, JSON.stringify(acctList));\n    }, [acctList])\n\n    // on modify account, will add to local storage\n    useEffect(() => {\n        localStorage.setItem(LOCAL_STORAGE_KEY_1, JSON.stringify(accts));\n    }, [accts])\n\n    // on new transactions, will add to local storage\n    useEffect(() => {\n        localStorage.setItem(LOCAL_STORAGE_KEY_2, JSON.stringify(transactionHistory));\n    }, [transactionHistory])\n\n    //Function to deposit\n    const handleDeposit = () => {\n        const fromAcct = accts.find(acct => {return acct.id === fromAcctNum})\n        if(fromAcct) {\n                setDepositMessage(`Depositing ${depositAmt} from ${fromAcct[\"Account Name\"]}'s account...`)\n                setTimeout(() =>{\n                    var newBal = (fromAcct[\"Balance\"]*100 - (-depositAmt)*100)/100;\n                    setAccts([...accts], fromAcct[\"Balance\"] = newBal)\n                    var date = generateDate();\n                    var newTransaction = new TransactionClass(uuidv4(), date, null, fromAcctNum, \"Deposit\", depositAmt);\n                    setTransactionHistory(prevTransactions => {\n                        return [...prevTransactions, newTransaction]\n                    })\n                    depositAmtRef.current.value = null\n                    setDepositMessage(`Successfully deposited. The new balance of ${fromAcct[\"Account Name\"]} is ${newBal}`)\n                }, 2000)\n        }\n        else {\n            setDepositMessage(`Account does not exist`)\n        }\n    }\n    return (\n        <div className=\"main-parent\">\n            <div className=\"transact-parent\">\n                <h1 className=\"glitch\" data-text=\"Deposit\"> Deposit </h1>\n                {/* Deposit Form */}\n                <div className=\"transact-sub\">\n                    <div className=\"transact-sub2\">\n                    <Form className=\"form-class\">\n                        <Form.Group className=\"mb-3\">\n                            <Form.Label>Account No.</Form.Label>\n                            <Form.Control type=\"number\" className=\"number-input\" placeholder=\"Account No.\" onChange={(e) => setFromAcctNum(e.target.value)} onKeyPress={(e) => setDepositMessage('')}/>\n                        </Form.Group>\n                        <Form.Group className=\"mb-3\">\n                            <Form.Label>Amount:</Form.Label>\n                            <Form.Control ref={depositAmtRef} className=\"number-input\" min=\"1\" type=\"number\" placeholder=\"0\" onInput={validate} onChange={(e) => setDepositAmt(e.target.value)} onKeyPress={(e) => setDepositMessage('')}/>\n                        </Form.Group>\n                    </Form>\n                    <div className=\"muted-container\">\n                        <Form.Text id=\"errorMessage\">{depositMessage}</Form.Text>\n                    </div>\n                    \n                    <Button id=\"deposit-button\" className=\"transact-button\" variant=\"primary\" onClick={handleDeposit}>\n                        Deposit\n                    </Button>\n                    </div>\n                </div>\n            </div>\n            {/* <AccountListTransactions /> */}\n            <div className=\"accountList transactionAccountList\">\n                {/* Accounts List Table */}\n                <div className=\"table-container\">\n                    <Table responsive className =\"container\" id=\"userTable\">\n                        <thead>\n                            <tr>\n                            <th>Account No.</th>\n                            <th>Account Name</th>\n                            <th>Balance</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {acctList\n                                .filter(acct => fromAcctNum === '' || acct.id.includes(fromAcctNum))\n                                .map(acct => {\n                                    return <Account emailDisplay={false} key={acct.id} acct = {acct}/>\n                                })\n                            }\n                        </tbody>\n                    </Table>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Deposit\n","import React, {useState, useEffect, useRef} from 'react'\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport { v4 as uuidv4 } from 'uuid';\n// import { useLocation } from \"react-router-dom\";\nimport '../../css/Deposit.css'\nimport Table from 'react-bootstrap/Table';\nimport Account from '../Accounts/Account'\n\nconst LOCAL_STORAGE_KEY_1 = 'userList';\nconst LOCAL_STORAGE_KEY_2 = 'transactionList';\nconst LOCAL_STORAGE_KEY_3 = 'accountListTransactions';\n\nconst Transfer = (props) => {\n    const generateDate = props.generateDate\n    const TransactionClass = props.TransactionClass\n    const validate = props.validate\n\n    const [accts, setAccts] = useState([]);\n    const [acctList, setAcctList] = useState([]);\n    const [fromAcctNum, setFromAcctNum] = useState('');\n    const [toAcctNum, setToAcctNum] = useState('');\n    const [transferAmt, setTransferAmt] = useState(0);\n    const [transactionHistory, setTransactionHistory] = useState([]);\n\n    //messages\n    const [transferMessage, setTransferMessage] = useState('');\n\n    //input reference\n    const transferAmtRef = useRef()\n\n    useEffect(() => {\n        const storedAccts = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY_1));\n        if (storedAccts) setAccts(storedAccts);\n        const storedTransactions = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY_2));\n        if (storedTransactions) setTransactionHistory(storedTransactions);\n        if (storedAccts) setAcctList(storedAccts);\n    }, [])\n\n    // on modify account, will add to local storage\n    useEffect(() => {\n        localStorage.setItem(LOCAL_STORAGE_KEY_1, JSON.stringify(accts));\n    }, [accts])\n\n    // on new transactions, will add to local storage\n    useEffect(() => {\n        localStorage.setItem(LOCAL_STORAGE_KEY_2, JSON.stringify(transactionHistory));\n    }, [transactionHistory])\n\n    //filterlist\n    useEffect(() => {\n        localStorage.setItem(LOCAL_STORAGE_KEY_3, JSON.stringify(acctList));\n    }, [acctList])\n\n    //Function to transfer\n    const handleTransfer = () => {\n        const fromAcct = accts.find(acct => {return acct.id === fromAcctNum})\n        const toAcct = accts.find(acct => {return acct.id === toAcctNum})\n        if(fromAcct && toAcct) {\n            if(fromAcct!==toAcct) {\n                if(fromAcct[\"Balance\"]>= parseInt(transferAmt*100)/100) {\n                    setTransferMessage(`Transferring ${transferAmt} from ${fromAcct[\"Account Name\"]} to ${toAcct[\"Account Name\"]}'s account...`)\n                    setTimeout(() =>{\n                        var newBalFromAcct = (fromAcct[\"Balance\"]*100 - transferAmt*100)/100;\n                        setAccts([...accts], fromAcct[\"Balance\"] = newBalFromAcct)\n                        var newBalToAcct = (toAcct[\"Balance\"]*100 - (-transferAmt)*100)/100\n                        setAccts([...accts], toAcct[\"Balance\"] = newBalToAcct)\n                        var date = generateDate();\n                        var newTransaction = new TransactionClass(uuidv4(), date, fromAcctNum, toAcctNum, \"Transfer\", transferAmt);\n                        setTransactionHistory(prevTransactions => {\n                            return [...prevTransactions, newTransaction]\n                        })\n                        transferAmtRef.current.value = null\n                        setTransferMessage(`Successful Transfer.`)\n                    }, 2000)\n                }\n                else {\n                    setTransferMessage(`Insufficient Funds.`)\n                }\n            }\n            else {\n                setTransferMessage(`Cannot transfer to same account`)\n            }\n        }\n        else if (!fromAcct) {\n            setTransferMessage(`Account does not exist`)\n        }\n        else {\n            setTransferMessage(`Account does not exist`)\n        }\n    }\n\n    return (\n        <div className=\"main-parent\">\n            <div className=\"transact-parent\">\n                <h1 className=\"glitch\" data-text=\"Transfer\"> Transfer </h1>\n\n            {/* Transfer Form */}\n                <div className=\"transact-sub\"> \n                    <div className=\"transact-sub2\">\n                        <Form className=\"form-class\">\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label>Sender Account No.</Form.Label>\n                                <Form.Control type=\"number\" className=\"number-input\" placeholder=\"Account No.\" onChange={(e) => setFromAcctNum(e.target.value)} onKeyPress={(e) => setTransferMessage('')}/>\n                            </Form.Group>\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label>Receiver Account No.</Form.Label>\n                                <Form.Control type=\"number\" className=\"number-input\" placeholder=\"Account No.\" onChange={(e) => setToAcctNum(e.target.value)} onKeyPress={(e) => setTransferMessage('')}/>\n                            </Form.Group>\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label>Amount:</Form.Label>\n                                <Form.Control ref={transferAmtRef} className=\"number-input\" type=\"number\" placeholder=\"0\" onInput={validate} onChange={(e) => setTransferAmt(e.target.value)} onKeyPress={(e) => setTransferMessage('')}/>\n                            </Form.Group>\n                        </Form>\n                        <div className=\"muted-container\">\n                            <Form.Text id=\"errorMessage\">{transferMessage}</Form.Text>\n                        </div>\n                        <Button id=\"transfer-button\" className=\"transact-button\" variant=\"primary\" onClick={handleTransfer}>\n                            Transfer\n                        </Button>\n                    </div>\n                </div> \n            </div>\n            {/* <AccountListTransactions /> */}\n            <div className=\"accountList transactionAccountList\">\n                {/* Accounts List Table */}\n                <div className=\"table-container\">\n                    <Table responsive className =\"container\" id=\"userTable\">\n                        <thead>\n                            <tr>\n                            <th>Account No.</th>\n                            <th>Account Name</th>\n                            <th>Balance</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {acctList\n                                .filter(acct => toAcctNum === '' || acct.id.includes(toAcctNum))\n                                .map(acct => {\n                                    return <Account emailDisplay={false} key={acct.id} acct = {acct}/>\n                                })\n                            }\n                        </tbody>\n                    </Table>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Transfer\n","import React from 'react'\nimport Dinero from '../../../node_modules/dinero.js'\n\nconst Expenses = ({toggleCheck, expense}) => {\n    let expenseCost = Dinero({ amount: parseInt(expense.expenseCost * 100), currency: 'PHP' }).toFormat()\n\n    return (\n            <tr>\n                {/* <td><input type=\"checkbox\" defaultChecked={expense.ticked} onChange={handleClick}/></td> */}\n                <td>{expense.expenseName}</td>\n                <td>{expenseCost}</td>\n            </tr>\n    )\n}\n\nexport default Expenses\n","import React from 'react'\nimport Table from 'react-bootstrap/Table';\nimport Expenses from './Expenses'\nimport './client-css/dashboard.css'\n\nconst ExpensesTable = ({toggleCheck, expenses}) => {\n    return (\n        <div className=\"expense-table\">\n            <Table responsive className =\"container expense-table\">\n                <thead>\n                    <tr>\n                    <th>Expense Name</th>\n                    <th>Cost</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {expenses.map(expense => {\n                        return <Expenses key={expense.id} toggleCheck={toggleCheck}  expense = {expense}/>\n                    })}\n                </tbody>\n            </Table>\n        </div>\n    )\n}\n\nexport default ExpensesTable\n","import React, {useState, useEffect, useRef} from 'react'\nimport './client-css/dashboard.css'\nimport { useLocation } from \"react-router-dom\";\nimport Dinero from '../../../node_modules/dinero.js'\nimport {Card, Modal, Button, Form} from 'react-bootstrap'\nimport ExpensesTable from './ExpensesTable'\nimport {Redirect} from \"react-router-dom\";\n\nconst LOCAL_STORAGE_KEY_1 = 'userList';\n\nconst Dashboard = () => {   \n    const location = useLocation();\n    const {email} = location.state;\n    const [accts, setAccts] = useState(JSON.parse(localStorage.getItem('userList')))\n    const [clientDetails, setClientDetails] = useState(accts.find(acct => acct['Email'] === email));\n    const [expenseName, setExpenseName] = useState('');\n    const [expenseCost, setExpenseCost] = useState(0);\n    const [show, setShow] = useState(false);\n    const [indexClient] = useState(accts.findIndex(acct => acct['Email'] === email))\n    const [loginState, setLoginState] = useState(true)\n    const [withdrawAmt, setWithdrawAmt] = useState(0)\n    const [depositAmt, setDepositAmt] = useState(0)\n    const [transferAmt, setTransferAmt] = useState(0)\n    const [toAcctNum, setToAcctNum] = useState(0)\n    const [color, setColor] = useState('#FFFFFF')\n\n    const expenseNameRef = useRef()\n    const expenseCostRef = useRef()\n    const withdrawAmtRef = useRef()\n    const depositAmtRef = useRef()\n    const transferAmtRef = useRef()\n    const toAcctRef = useRef()\n    const colorPickerRef = useRef()\n\n    useEffect(() => {\n        let dashboardContainer = document.querySelector('.dashboard-container');\n        dashboardContainer.style.backgroundColor = color;\n    }, [color])\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => {\n        setShow(true)\n    };\n\n    const handleCreateExpense = (event) => {\n            event.preventDefault();\n            const newExpense = {\n                id: clientDetails.expenses.length ? clientDetails.expenses[clientDetails.expenses.length-1].id+1 : 1, \n                expenseName: expenseName, \n                expenseCost: expenseCost,\n                ticked: false\n            }\n\n            const copyClientDetails = clientDetails\n            copyClientDetails.expenses.push(newExpense)\n            copyClientDetails[\"Balance\"] = copyClientDetails[\"Balance\"] - expenseCost;\n            setClientDetails(copyClientDetails)\n\n            const newAcctList = accts\n            newAcctList[indexClient] = copyClientDetails\n            setAccts(newAcctList)\n            localStorage.setItem(LOCAL_STORAGE_KEY_1, JSON.stringify(accts));\n            \n            setExpenseName('');\n            setExpenseCost(0);\n            expenseNameRef.current.value = null;\n            expenseCostRef.current.value = null;\n    }\n\n    const handleWithdraw = (e) => {\n        e.preventDefault();\n        if(clientDetails[\"Balance\"]>= parseInt(withdrawAmt*100)/100) {\n            var newBal = (clientDetails[\"Balance\"]*100 - withdrawAmt*100)/100;\n            const copyClientDetails = clientDetails\n            copyClientDetails[\"Balance\"] = newBal;\n            setClientDetails(copyClientDetails)\n\n            const newAcctList = accts\n            newAcctList[indexClient] = copyClientDetails\n            setAccts(newAcctList)\n            localStorage.setItem(LOCAL_STORAGE_KEY_1, JSON.stringify(accts));\n\n            setWithdrawAmt(0)\n            withdrawAmtRef.current.value = null\n        }\n    }\n\n    const handleDeposit = (e) => {\n        e.preventDefault();\n        var newBal = (clientDetails[\"Balance\"]*100 - (-depositAmt)*100)/100;\n        const copyClientDetails = clientDetails\n        copyClientDetails[\"Balance\"] = newBal;\n        setClientDetails(copyClientDetails)\n\n        const newAcctList = accts\n        newAcctList[indexClient] = copyClientDetails\n        setAccts(newAcctList)\n        localStorage.setItem(LOCAL_STORAGE_KEY_1, JSON.stringify(accts));\n\n        setDepositAmt(0)\n        depositAmtRef.current.value = null\n    }\n\n    const handleTransfer = (e) => {\n        e.preventDefault();\n        const toAcct = accts.find(acct => {return acct.id === toAcctNum})\n        if(toAcct && clientDetails.id!==toAcct) {\n            if(clientDetails[\"Balance\"]>= parseInt(transferAmt*100)/100) {\n                var newBal = (clientDetails[\"Balance\"]*100 - transferAmt*100)/100;\n                const copyClientDetails = clientDetails\n                copyClientDetails[\"Balance\"] = newBal;\n                setClientDetails(copyClientDetails)\n\n                const newAcctList = accts\n                newAcctList[indexClient] = copyClientDetails\n                setAccts(newAcctList)\n                localStorage.setItem(LOCAL_STORAGE_KEY_1, JSON.stringify(accts));\n\n                var newBalToAcct = (toAcct[\"Balance\"]*100 - (-transferAmt)*100)/100\n                setAccts([...accts], toAcct[\"Balance\"] = newBalToAcct)\n                localStorage.setItem(LOCAL_STORAGE_KEY_1, JSON.stringify(accts));\n\n                setTransferAmt(0)\n                setToAcctNum(0);\n                transferAmtRef.current.value = null\n                toAcctRef.current.value = null\n            }\n        }\n    }\n\n    const handleLogout = () => {\n        setLoginState(false)\n    }\n\n\n    if(!loginState) {\n        return (<Redirect to=\"/login\" />);\n    }\n    else {\n        return (\n            <div className=\"dashboard-container\">\n                <div className=\"client-parent\">\n                    <div className=\"logout-container\">\n                        <Button variant=\"outline-secondary\" size=\"sm\" onClick={handleLogout}>Logout</Button>\n                    </div>\n                    <Card className=\"client-bal\">\n                        {/* {email} */}\n                        <h1>\n                            {clientDetails[\"Balance\"] && Dinero({ amount: parseInt(clientDetails[\"Balance\"] * 100), currency: 'PHP' }).toFormat()}\n                        </h1>\n                        <div className=\"card-sub\">\n                            <div>\n                                {clientDetails && clientDetails.id}\n                            </div>\n                            <div>\n                                {clientDetails[\"Account Name\"] && clientDetails[\"Account Name\"]}\n                            </div>\n                        </div>\n                    </Card>\n\n                    <Button variant=\"primary\" onClick={handleShow}>Expenses</Button>\n\n                    <Modal show={show} onHide={handleClose}>\n                    <Modal.Header>\n                        <Modal.Title>\n                            Current Balance: {clientDetails[\"Balance\"] && Dinero({ amount: parseInt(clientDetails[\"Balance\"] * 100), currency: 'PHP' }).toFormat()}\n                        </Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <Card>\n                            <ExpensesTable expenses={clientDetails.expenses}/>\n                        </Card>\n                        <Form onSubmit={handleCreateExpense} >       \n                            <Form.Group className=\"mb-3\">\n                                <Form.Label>Expense Item:</Form.Label>\n                                <Form.Control required type=\"text\" placeholder=\"Expense Name\" required ref={expenseNameRef} onChange={(e) => setExpenseName(e.target.value)} />\n                            </Form.Group>\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label>Expense Cost:</Form.Label>\n                                <Form.Control required min=\"0\" type=\"number\" placeholder=\"0\" ref={expenseCostRef} onChange={(e) => setExpenseCost(e.target.value)}/>\n                            </Form.Group>\n                            {<Button variant=\"secondary\" onClick={handleClose}>\n                                Close\n                            </Button>}\n                            <Button type=\"submit\" variant=\"primary\">\n                                Add\n                            </Button> \n                        </Form>\n                    </Modal.Body>\n                </Modal>\n\n                    <div className=\"slider\">                  \n                        <div className=\"slides\">\n                            <div id=\"slide-1\" className=\"slide\">\n                                <div className=\"transactionTitle\">Withdraw</div>\n                                <div className=\"withdrawFormContainer\">\n                                    <Form onSubmit={handleWithdraw} >       \n                                        <Form.Group className=\"mb-3\">\n                                            <Form.Control required type=\"text\" placeholder=\"Amount\" ref={withdrawAmtRef} onChange={(e) => setWithdrawAmt(e.target.value)} />\n                                        </Form.Group>\n                                        <Button type=\"submit\" variant=\"primary\">\n                                            Withdraw\n                                        </Button> \n                                    </Form>\n                                </div>\n                            </div>\n                            <div id=\"slide-2\" className=\"slide\">\n                                <div className=\"transactionTitle\">Deposit</div>\n                                <div className=\"depositFormContainer\">\n                                    <Form onSubmit={handleDeposit} >       \n                                        <Form.Group className=\"mb-3\">\n                                            <Form.Control required type=\"text\" placeholder=\"Amount\" ref={depositAmtRef} onChange={(e) => setDepositAmt(e.target.value)} />\n                                        </Form.Group>\n                                        <Button type=\"submit\" variant=\"primary\">\n                                            Deposit\n                                        </Button> \n                                    </Form>\n                                </div>\n                            </div>\n                            <div id=\"slide-3\" className=\"slide\">\n                                <div  className=\"transactionTitle\">Transfer Funds</div>\n                                <div className=\"transferFormContainer\">\n                                    <Form onSubmit={handleTransfer} >\n                                        <Form.Group className=\"mb-3\">\n                                            <Form.Control required type=\"text\" placeholder=\"Send to Account No.\" ref={toAcctRef} onChange={(e) => setToAcctNum(e.target.value)} />\n                                        </Form.Group>       \n                                        <Form.Group className=\"mb-3\">\n                                            <Form.Control required type=\"text\" placeholder=\"Amount\" ref={transferAmtRef} onChange={(e) => setTransferAmt(e.target.value)} />\n                                        </Form.Group>\n                                        <Button type=\"submit\" variant=\"primary\">\n                                            Send\n                                        </Button> \n                                    </Form>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Form.Control\n                        type=\"color\"\n                        id=\"colorPicker\"\n                        defaultValue=\"#FFFFFF\"\n                        title=\"Choose your color\"\n                        ref={colorPickerRef}\n                        onChange={(e)=>setColor(e.target.value)}\n                    />\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Dashboard\n","import React from 'react';\nimport { HashRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\n// import { useLocation } from \"react-router-dom\";\nimport {Navigation, Login, UserTransaction, AccountList, Withdraw, Deposit, Transfer, Dashboard } from \"./components\";\n\nconst LOCAL_STORAGE_KEY_1 = 'userList';\nconst LOCAL_STORAGE_KEY_2 = 'transactionList';\n\nfunction App() {\n  // Date and Time generator\n  const generateDate = () => {\n    var date = '';\n    //Date\n    var currentDate = new Date();\n    var year = currentDate.getFullYear();\n    var day = currentDate.getDate();\n    var month = currentDate.getMonth();\n    var monthArray = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n\n    // Time\n    var currentTime = new Date();\n    var h = currentTime.getHours();\n    var m = currentTime.getMinutes();\n    var partOfDay;\n    if (h < 12) {\n        partOfDay = \"AM\";\n    }\n    else {\n        partOfDay = \"PM\";\n    }\n    if (h > 12) {\n        h = h - 12;\n    }\n    if (h === 24) {\n        h = 12;\n    }\n    if (m < 10) {\n        m = \"0\" + m;\n    }\n\n    // Add to variable\n    date = `${monthArray[month]} ${day} ${year} ${h}:${m} ${partOfDay}`;\n\n    return date;\n  }\n\n  //template object for transactions\n  class TransactionClass {\n    constructor(transactionId, transactionDate, transactionFromAcctNum, transactionToAcctNum, transactionType, transactionAmt) {\n        this.transactionId = transactionId;\n        this.transactionDate = transactionDate;\n        this.transactionFromAcctNum = transactionFromAcctNum;\n        this.transactionToAcctNum = transactionToAcctNum;\n        this.transactionType = transactionType;\n        this.transactionAmt = transactionAmt\n    }\n  }\n\n  //limit to 2 decimal places onInput\n  const validate = (e) => {\n    e.target.value = (e.target.value.indexOf(\".\") >= 0) ? (e.target.value.substr(0, e.target.value.indexOf(\".\")) + e.target.value.substr(e.target.value.indexOf(\".\"), 3)) : e.target.value;\n  }\n\n  return (\n    <div className=\"ApplicationTest\">\n      <Router>\n        <Navigation \n          LOCAL_STORAGE_KEY_1={LOCAL_STORAGE_KEY_1} \n          LOCAL_STORAGE_KEY_2={LOCAL_STORAGE_KEY_2} />\n        <Switch>\n          <Route path=\"/login\" exact component={(props) => (<Login {...props} isAuthed={true} />)} />\n          <Route path=\"/accounts\" exact \n            render={(props) => (\n            <AccountList {...props} \n            validate = {validate}\n            isAuthed={true} />)} />\n          <Route path=\"/transactions\" exact render={(props) => (<UserTransaction {...props} isAuthed={true} />)}/>\n          <Route path=\"/withdraw\" exact \n            render={(props) => (\n            <Withdraw {...props}\n              generateDate={generateDate} \n              TransactionClass = {TransactionClass}\n              validate = {validate}\n              isAuthed={true} />)}/>\n          <Route path=\"/deposit\" exact \n            render={(props) => (\n              <Deposit {...props} \n              generateDate={generateDate} \n              TransactionClass = {TransactionClass}\n              validate = {validate}\n              isAuthed={true} />)}/>\n          <Route path=\"/transfer\" exact \n            render={(props) => (\n              <Transfer {...props} \n              generateDate={generateDate} \n              TransactionClass = {TransactionClass}\n              validate = {validate}\n              isAuthed={true} />)}/>\n          <Route path=\"/client/dashboard\" exact \n            render={(props) => (\n            <Dashboard {...props} \n            isAuthed={true} />)} />\n          <Route path=\"/\" >\n            <Redirect to=\"/login\"/>\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}